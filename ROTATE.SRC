;======================================================;;                                                      ;;              R O T A T E                             ;;                                                      ;;======================================================;;-----------------------------------------------------;;              Rotate;;  Source : PtrSelect;  Buffer de Travail : PtrMask ( il faut le refaire apres);  Buffer pour le Undo : PtrOutLineRotate         Start               Using Data               Using Allequ               MoveLong PtrOutLine,Ptr10               MoveLong PtrMask,Ptr14               Ldy  #(Paintx*Painty/2)-2               Lda  #$FFFFLoopStz        Anop               Sta  [Ptr10],y               Sta  [Ptr14],y               Dey               Dey               Bpl  LoopStz;----- Passe la Selection dans le PtrOutLine  Pour le Undo -----               MoveLong PtrSelect,Ptr10               MoveLong PtrOutLine,Ptr14               Ldy  #(Paintx*Painty/2)-2Loop1          Anop               Lda  [Ptr10],y               Sta  [Ptr14],y               Dey               Dey               Bpl  Loop1               MoveRect DragRect,RotateSvDrag               Sec               Lda  DragRect+4               Sbc  DragRect               Sta  H               Sec               Lda  DragRect+6               Sbc  DragRect+2               Sta  W;----- Modifie DragRect -----               Sec               Lda  DragRect+4               Sbc  DragRect               Lsr  A               Clc               Adc  DragRect               Sta  Middley               Sec               Lda  DragRect+6               Sbc  DragRect+2               Lsr  A               CLc               Adc  DragRect+2               Sta  Middlex               Sec               Lda  DragRect+6               Sbc  Middlex               Pha               Sec               Lda  Middley               Sbc  1,s               Sta  1,s               Sec               Lda  DragRect               Sbc  Middley               Eor  #$FFFF               Ina               Pha               Sec               Lda  Middlex               Sbc  1,s               Sta  DragRect+2               Pla                      Restaure la Pile               Pla               Sta  DragRect;-------------------------------------------------------;---- Attention a partir d'ici W et H sont inverse -----;-------------------------------------------------------;----- Calcul les Limites de Transfert -----               Lda  #Painty               Cmp  W               Bge  OkH               Sta  WOkH            Anop               Lda  #Paintx               Cmp  H               Bge  OkW               Sta  HOkW            Anop               Clc               Lda  DragRect               Adc  W               Sta  DragRect+4               Clc               Lda  DragRect+2               Adc  H               Sta  DragRect+6;----- Recentre le Rectangle si neccessaire -----               CSgnBge DragRect,WiewRec,OkY1               Lda  WiewRec               Sta  DragRect               Clc               Adc  W               Sta  DragRect+4OkY1           Anop               CSgnBge DragRect+2,WiewRec+2,OkX1               Lda  WiewRec+2               Sta  DragRect+2               Clc               Adc  H               Sta  DragRect+6OkX1           Anop               CSgnBle DragRect+4,WiewRec+4,OkY2               Lda  WiewRec+4               Sta  DragRect+4               Sec               Sbc  W               Sta  DragRectOkY2           Anop               CSgnBle DragRect+6,WiewRec+6,OkX2               Lda  WiewRec+6               Sta  DragRect+6               Sec               Sbc  H               Sta  DragRect+2OkX2           Anop               Dec  H                   pour le Transfert on prend               Dec  W                   H et W dans le Bon Sens               Ldy  HLoopH1         Anop               Ldx  WLoopW1         Anop               Phy               Phx               Jsr  GetNibble               Lda  3,s                 Y               Tax               Sec               Lda  W               Sbc  1,s                 X               Tay               Jsr  PutNibble               Plx               Ply               Dex               Bpl  LoopW1               Dey               Bpl  LoopH1;----- Recopie la transformation dans PtrSelect               Jsr  MaskToSelect;----- Affiche la Modification -----               Jsr  SelectOff               Jsr  StockToScreen               MoveLong DragRect,EvtWhere               Jsr  RedrawSelect               Jsr  SelectOn               Lda  #UndoRotate               Sta  TopUndo;----- Transfert DragRect pour le Undo -----               MoveRect DragRect,SvDragRect               Rts;-----------------------------------------------------;;              UndoRotate;DoUndoRot      Entry               MoveLong PtrOutLine,Ptr10               MoveLong PtrSelect,Ptr14               Ldy  #(Paintx*Painty/2)-2Loop3          Anop               Lda  [Ptr14],y               Pha               Lda  [Ptr10],y               Sta  [Ptr14],y               Pla               Sta  [Ptr10],y               Dey               Dey               Bpl  Loop3               MoveRect RotateSvDrag,TempoRect               MoveRect DragRect,RotateSvDrag               MoveRect TempoRect,DragRect               Jsr  SelectOff               Jsr  StockToScreen               MoveLong DragRect,EvtWhere               Jsr  RedrawSelect               Jsr  SelectOn               Rts;------------------------------------------------------;;              DoFlipH;;  Source : PtrSelect;  Buffer de travail : PtrMask (il faut le refaire apres); DoFlipH        Entry               MoveLong PtrSelect,Ptr10               MoveLong PtrMask,Ptr14               Ldy  #(Paintx*Painty/2)-2               Lda  #$FFFFLoopZr         Anop               Sta  [Ptr14],y               Dey               Dey               Bpl  LoopZr               Sec               Lda  DragRect+6               Sbc  DragRect+2               Dea               Sta  W               Sec               Lda  DragRect+4               Sbc  DragRect               Dea               TayLoop20         Anop               Ldx  WLoop21         Anop               Phy               Phx               Jsr  GetNibble               Lda  3,s                Y               Tay               Sec               Lda  W               Sbc  1,s               Tax               Jsr  PutNibble               Plx               Ply               Dex               Bpl  Loop21               Dey               Bpl  Loop20;----- Recopie le PtrMask dans PtrSelect -----               Jsr  MaskToSelect               Lda  #UndoFlipH               Sta  TopUndo               MoveLong DragRect,EvtWhere               Jsr  RedrawSelect               Rts;------------------------------------------------------ ;;              Mask To Select;MaskToSelect   Anop               MoveLong PtrMask,Ptr10               MoveLong PtrSelect,Ptr14               Ldy  #(Paintx*Painty/2)-2Loop4          Anop               Lda  [Ptr10],y               Sta  [Ptr14],y               Dey               Dey               Bpl  Loop4;------ Remet le Mask a Noir -----               MoveLong PtrMask,Ptr10               Ldy  #(Paintx*Painty/2)-2               Lda  #0Loop5          Anop               Sta  [Ptr10],y               Dey               Dey               Bpl  Loop5               Rts;------------------------------------------------------;;              GetNibble;GetNibble      Anop               Tya               Asl  A               Tay               Lda  TMulPaintx,y               CLc               Adc  PtrSelect               Sta  Ptr10               Lda  PtrSelect+2               Sta  Ptr10+2               Txa               Lsr  A               Tay               Lda  [Ptr10],y               Xba               Pha               Txa                      Teste la Parite               Lsr  A               Pla                      Recupere la Source               Bcs  Impair1               And  #$F000               Bra  StaNibbleImpair1        Anop               And  #$0F00               Asl  A               Asl  A               Asl  A               Asl  AStaNibble      Anop               Sta  Nibble               Rts;------------------------------------------------------;;              PutNibble;PutNibble      Anop               Tya               Asl  A               Tay               Lda  TMulPaintx,y               CLc               Adc  PtrMask               Sta  Ptr10               Lda  PtrMask+2               Sta  Ptr10+2               Txa               Lsr  A               Tay               Lda  [Ptr10],y               Xba               Sta  Temp               Phy               Txa                      Teste la Parite               Lsr  A               Bcs  Impair2               Lda  #$F000               Trb  Temp               Lda  Nibble               Bra  StockImpair2        Anop               Lda  #$0F00               Trb  Temp               Lda  Nibble               Lsr  A               Lsr  A               Lsr  A               Lsr  AStock          Anop               Ora  Temp               Ply               Xba               Sta  [Ptr10],y               Rts;------------------------------------------------------;;              Data;Temp           ds   2Nibble         ds   2RotateSvDrag   ds   8H              ds   2W              ds   2TempoRect      ds   8Middley        ds   2Middlex        ds   2TMulPaintx     Anop         dc i'0*Paintx/2,1*Paintx/2,2*Paintx/2,3*Paintx/2,4*Paintx/2'         dc i'5*Paintx/2,6*Paintx/2,7*Paintx/2,8*Paintx/2,9*Paintx/2'         dc i'10*Paintx/2,11*Paintx/2,12*Paintx/2,13*Paintx/2,14*Paintx/2'         dc i'15*Paintx/2,16*Paintx/2,17*Paintx/2,18*Paintx/2,19*Paintx/2'         dc i'20*Paintx/2,21*Paintx/2,22*Paintx/2,23*Paintx/2,24*Paintx/2'         dc i'25*Paintx/2,26*Paintx/2,27*Paintx/2,28*Paintx/2,29*Paintx/2'         dc i'30*Paintx/2,31*Paintx/2,32*Paintx/2,33*Paintx/2,34*Paintx/2'         dc i'35*Paintx/2,36*Paintx/2,37*Paintx/2,38*Paintx/2,39*Paintx/2'         dc i'40*Paintx/2,41*Paintx/2,42*Paintx/2,43*Paintx/2,44*Paintx/2'         dc i'45*Paintx/2,46*Paintx/2,47*Paintx/2,48*Paintx/2,49*Paintx/2'         dc i'50*Paintx/2,51*Paintx/2,52*Paintx/2,53*Paintx/2,54*Paintx/2'         dc i'55*Paintx/2,56*Paintx/2,57*Paintx/2,58*Paintx/2,59*Paintx/2'         dc i'60*Paintx/2,61*Paintx/2,62*Paintx/2,63*Paintx/2,64*Paintx/2'         dc i'65*Paintx/2,66*Paintx/2,67*Paintx/2,68*Paintx/2,69*Paintx/2'         dc i'70*Paintx/2,71*Paintx/2,72*Paintx/2,73*Paintx/2,74*Paintx/2'         dc i'75*Paintx/2,76*Paintx/2,77*Paintx/2,78*Paintx/2,79*Paintx/2'         dc i'80*Paintx/2,81*Paintx/2,82*Paintx/2,83*Paintx/2,84*Paintx/2'         dc i'85*Paintx/2,86*Paintx/2,87*Paintx/2,88*Paintx/2,89*Paintx/2'         dc i'90*Paintx/2,91*Paintx/2,92*Paintx/2,93*Paintx/2,94*Paintx/2'         dc i'95*Paintx/2,96*Paintx/2,97*Paintx/2,98*Paintx/2,99*Paintx/2'         dc i'100*Paintx/2,101*Paintx/2,102*Paintx/2,103*Paintx/2,104*Paintx/2'         dc i'105*Paintx/2,106*Paintx/2,107*Paintx/2,108*Paintx/2,109*Paintx/2'         dc i'110*Paintx/2,111*Paintx/2,112*Paintx/2,113*Paintx/2,114*Paintx/2'         dc i'115*Paintx/2,116*Paintx/2,117*Paintx/2,118*Paintx/2,119*Paintx/2'         dc i'120*Paintx/2,121*Paintx/2,122*Paintx/2,123*Paintx/2,124*Paintx/2'         dc i'125*Paintx/2,126*Paintx/2,127*Paintx/2,128*Paintx/2,129*Paintx/2'         dc i'130*Paintx/2,131*Paintx/2,132*Paintx/2'               End