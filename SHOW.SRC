;======================================================;;                                                      ;;              S H O W                                 ;;                                                      ;;======================================================;show           start               using Data               using anime_data               Using Strings               Using AllEqu               _ShowCursor               Pea  GetFilex      X               Pea  GetFiley      Y               PushPtr ReadShow               Lda  #0               Pha               Pha               PushPtr ListType               PushPtr Reponse               _SFGetFile               Jsr  ForceUpdate               Lda  Good               Bne  DoShowrts            rtsListType       dc   i1'1,$C2'Doshow         Anop               Pha                Annule tous les Evt               PushWord #$FFFF               PushWord #0               _FlushEvents               pla               lda Filename               and #$3f               pha               taxmore           lda Filename,x               and #$7f               cmp #'/'               beq found               dex               bne morefound          phx               ldy #$ffff               dexmore2          inx               inx               iny               iny               lda Filename,x               sta Picname0,y               txa               cmp 3,s               blt more2               lda 3,s               sec               sbc 1,s               pha               lda Picname0               and #$ff00               ora 1,s               sta Picname0               pla               pla               pla               _hidecursor               _Open Open_Parms               bcs rts               lda open_parms               beq rts               sta read_parms               sta read_length               sta read_pmod               sta read_Timing               _Read Read_Parms               bcc *+4               brk $10               _read read_length               _Read Read_Timing               PushLong #00             ; Output : Handle.               PushLong Mod_length      ; Block Size.               PushWord MyID            ; Owner.               PushWord #$8008          ; not purgeable !               PushLong #00             ; Anywhere.               _NewHandle               bcc     Cont3               pla               pla               _Close Open_Parms               rtscont3          Anop               pla               sta hmod               pla               sta hmod+2               lda [hmod]               sta pmod               sta read_pmod+2               ldy #2               lda [hmod],y               sta pmod+2               sta read_pmod+4               lda #$0               sta Read_pmod+8Read_prodos    lda Mod_length+2               beq One_shot               lda #$FFFF               sta Read_pmod+6               _read Read_pmod               lda #$FFFF               clc               adc Read_pMod+2               sta Read_pMod+2               lda #0               adc Read_pMod+4               sta Read_pMod+4               lda Mod_length               sec               sbc #$ffff               sta Mod_length               lda mod_length+2               sbc #0               sta Mod_length+2               jmp Read_prodosOne_shot       lda Mod_length               beq Shot_done               sta Read_pMod+6               _Read Read_pModShot_done      Anop               _Close Open_Parms               bcc *+4               brk $10               PushWord #0               PushWord #$FFFF               PushPtr  EventRecord               _GetNextEvent               pla               lda evtwhen               sta lastWhen2again          anop               lda [hmod]               sta pmod               ldy #2               lda [hmod],y               sta pmod+2               lda #4               sta pos               stz pos+2               lda #$2000               sta pScreen               lda #$00e1               sta pScreen+2               lda [pMod]               sta Hmod_size               ldy #2               lda [pMod],y               sta Hmod_size+2;              jmp synchromore3          ldy pos               lda [pmod],y               beq synchro               pha               iny               iny               lda [pmod],y               iny               iny               sty pos               bne nopos               inc pMod+2               inc pos+2nopos          anop               ply               sta [pscreen],yMore4          Anop               lda pos+2               cmp Hmod_size+2               blt more3               lda pos               cmp Hmod_size               blt more3               jmp againfin            Anop               _refresh               pushlong hMod               _hunlock               pushlong hMod               _DisposeHandle               stz  used               rtssynchro        inc pos               inc pos               inc pos               inc posWait           Anop               PushWord #0               PushWord #$FFFF               PushPtr  EventRecord               _GetNextEvent               pla               lda evtWhat               cmp #1               beq fin               lda evtwhen               sec               sbc lastWhen2               cmp Timing               blt wait               lda evtwhen               sta lastWhen2               jmp more4               end