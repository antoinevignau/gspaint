            LIST   OFF            SYMBOL OFF            MLOAD  /ass/MACLIB.CX            KEEP   /RAM7/RECEIVE            ORG    $2000            65816  Off            65C02  OnPHARDCOPY   START            JMP    SESSION     ;Debut de sessionINDIR       ENTRY            DS     04            ENDDATABUG     DATAADR         GEQU   $FEPGE0        GEQU   $FEENSAVEX     DS     01ENSAVEY     DS     01Start       DS     01TheEnd      DS     02OUT         DS     04ExValue     DS     02ParTab      DS     16            ENDRECEIVE     START            USING  DATABUG            phx            phy            jsr    Go34            ply            plx            RTSGo34        LDX    #$C2            LDY    #$20            JMP    ($34)Go36        LDX    #$C2            LDY    #$20            JMP    ($36)ENVOIE      ENTRY            phy            phx            ora    #$80            JSR    Go36            plx            ply            RTSINITPER     ENTRY            lda    #$0D            jsr    $C200            LDY    #07            STY    ADR            STY    $36            dey            dey            sty    $34            LDX    #$C2            STX    ADR+1            STX    $37            stx    $35            LDX    #00LOOP01      LDA    MESINI,X            BMI    NOTA2C            JSR    ENVOIE            IBNE   X,LOOP01NOTA2C      ANOP            RTS.A5SCREEN      DC     I1'$9E,$0B,$40,$50'MESINI      DC     I1'01,$31,$35,$42' ,$0D'    ;19200 bauds            DC     I1'01,$34,$44' ,$0D'        ;8 Data 2 Stops            DC     I1'01,$30,$50'              ;Pas de parite            dc     i1'01,$46,$44'              ;KeyBoard Disabled.            DC     I1'01,$5A'                  ;Zap            DC     I1'$FF'            ENDSESSION     START            USING  DATABUG            SEI            LDX    #03SAVVECT     LDA    $34,X            STA    OUT,X            DBPL   X,SAVVECT            LM     ExValue,ADR            LM     ExValue+1,ADR+1ReceiveOne  JSR    INITPER            lda    #$55                 ; Initialise le Perepherique.            jsr    Envoie            lda    #$AA            jsr    Envoie            LA     ADR,$4000            LDY    #00LOOP        JSR    RECEIVE            and    #$7F            STA    (ADR),Y            BEQ    RETURN            INY            BNE    LOOP            INC    ADR+1            BNE    LOOPRETURN      LDX    #00Loop0       LDA    $4000,X            CMP    #$0D            BEQ    RetFound            IBNE   X,Loop0RetFound    STY    ADR            STX    $4000-1            INX            STX    Start            LDX    #03RESTVECT    LDA    OUT,X            STA    $34,X            DBPL   X,RESTVECT            LM     TheEnd,ADR            LM     TheEnd+1,ADR+1            LA     ParTab+1,$4000-1            Lda    ParTab+1            Sta    AdrPath            Lda    ParTab+2            Sta    AdrPath+1            JSR    Open            BEQ    FileExist            JSR    Create            BNE    IoError            JSR    Open            BNE    IoErrorFileExist   LDA    ParTab+5            STA    ParTab+1            LM     ParTab+2,Start            LM     ParTab+3,#$40            LDA    TheEnd            SEC            SBC    Start            STA    ParTab+4            LDA    TheEnd+1            SBC    #$40            STA    ParTab+5            JSR    Write            BNE    IoErrorC            JSR    SetEOF            BNE    IoErrorC            JSR    Close            BNE    IoError            Lda     AdrPath            Sta     Adr            Lda     AdrPath+1            Sta     Adr+1            Ldy     #0            Lda     (Adr),y            Ina               Sta     NbChar               InyLpName      Anop            Lda     (Adr),y            Phy            JSR    $FDED            Ply            Iny            Cpy    NbChar            Blt    LpName            Lda    #$0D            Jsr    $FDED;           jmp    ReceiveOneFiniRec     LM     ADR,ExValue            LM     ADR+1,ExValue+1            cli            RTSAdrPath     Ds 2NbChar      Ds 1   IoErrorC    PHA            JSR    Close            PLAIoError     PHA            LDX    #00LpError     LDA    MesErr,x            BEQ    RetLpEr            JSR    $FDED            INX            BNE    LpErrorRetLpEr     PLA            JSR    $FDDA            STA    $C010WtKey       BIT    $C000            BPL    WtKey            STA    $C010            jmp    FiniRecMesErr      DC     C'Erreur disque No $'            DC     I1'00'            ENDBELL        START            PHP            SEI            LDA    #$20            STA    LENGTHBELL1       LDA    #02            JSR    WAIT            BIT    SPEAKER            LDA    #$24            JSR    WAIT            BIT    SPEAKER            DEC    LENGTH            BNE    BELL1            PLP            RTSWAIT        SECWAIT2       PHAWAIT3       SBC    #1            BNE    WAIT3            PLA            SBC    #1            BNE    WAIT2            RTSSPEAKER     EQU    $C030LENGTH      DS     01            ENDCreate      START            USING  DataBug            LDA    #07            STA    ParTab            LDA    #$E3            STA    ParTab+3            LDA    #$B0            STA    ParTab+4            LDA    #$03            STA    ParTab+5            LDA    #00            STA    ParTab+6            STA    ParTab+7            LDX    #03ll0         LDA    $BF90,X            STA    ParTab+8,X            DBPL   X,ll0            LDA    #$C0            BNE    SysCallOpen        ENTRY            LDA    #03            STA    ParTab            LA     ParTab+3,$2400            LDA    #$C8            BNE    SysCallWrite       ENTRY            LDA    #04            STA    ParTab            LDA    #$CB            BNE    SysCallSetEOF      ENTRY            LDA    #02            STA    ParTab            LDA    #$CF            JSR    SysCall            LDA    #$D0            BNE    SysCallClose       ENTRY            LDA    #01            STA    ParTab            LDA    #$CC            BNE    SysCallSysCall     ENTRY            STA    Command            JSR    $BF00Command     DC     I1'00'            DC     A'ParTab'            RTS            END